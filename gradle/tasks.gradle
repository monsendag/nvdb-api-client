task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

task writeBuildInfo {
    doLast {
        Properties properties = new Properties();
        properties.put("git.branch", git_branch);
        properties.put("git.hash", git_shorthash);
        properties.put("git.date", git_date.toString());
        properties.put("build.version", version);
        properties.put("build.date", build_date.toString());
        properties.put("build.builder", build_builder.toString());

        def resourceDir = new File("${buildDir}/resources/main/")
        resourceDir.mkdirs()
        new File(resourceDir, "build.properties").withWriter { writer ->
            properties.store(writer, null)
        }
    }
}

processResources.dependsOn(writeBuildInfo)
